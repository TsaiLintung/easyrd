% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_rd.R
\name{run_rd}
\alias{run_rd}
\title{Run RD Estimation}
\usage{
run_rd(dt, p, verbose = TRUE, ...)
}
\arguments{
\item{dt}{A data.table object containing the data to be used in the RD estimation.}

\item{p}{A list containing settings for the RD estimation including 'outcomes', 'running', 'cutoff', 'order', 'bandwidth', 'covariate', 'donut', 'vce', and 'est'. These settings specify the outcomes to analyze, the running variable, cutoff point, polynomial order, bandwidth, additional covariates, donut radius, variance estimation method, and estimation method respectively.}

\item{verbose}{A logical flag indicating whether to print messages about the estimation process and results. Default is TRUE.}

\item{...}{Additional arguments passed to the rdrobust function.}
}
\value{
Returns a data.table that includes the RD estimation results for each outcome specified in the 'p' list, including coefficients, standard errors, p-values, and bandwidths.
}
\description{
This function performs Regression Discontinuity (RD) estimation on the provided data table based on the parameters specified in the 'p' list. It supports various adjustments including bandwidth, covariates, and estimation methods. The function is capable of processing multiple outcomes specified in the 'p' list.
}
\examples{

#create example data
x <- runif(1000, -1, 1)
x1 <- runif(1000, -1, 1)
y <- 5+3*x+x1+2*(x>=0)+rnorm(1000)
dt <- data.table(x = x, y = y, x1 = x1)

# essential parameters

params <- list(outcomes = c("y"),
               running = "x",
               cutoff = 0)

# Run RD estimation
result <- run_rd(my_data_table, params)

# all parameters with default values
allparams <- list(outcomes = c("y"),
                  running = "x",
                  cutoff = 0,
                  order = 1,
                  bandwidth = 0.5,
                  covariate = c("x1"),
                  donut = -1,
                  vce = "hc1", #see vce in rdrobust
                  est = "conv") #conv, biasc, robust

}
