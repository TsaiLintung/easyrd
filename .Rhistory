plot(cars)
library(symengine)
use_vars(w, rz, rk, ws, Q)
use_vars(s1, s2, s3, tv, th, al, az, xs, xk, b)
use_vars(K, Z)
equations <- Vector(~ (s1*tv*al)*w + (s1*tv*az)*(rz-b) + (-s1*tv*xs + s3*xs)*ws + (-s1*tv*xk - s3*xs)*rk + Q - K,
~ (s1*tv*al)*w + (s1*tv*az)*(rz-b) + (-s1*tv*xw - s3*xk)*ws + (-s1*tv*xk - s3*xk)*rk + Q,
~ (-s1*th*al + s2*al)*w + (-s1*th*az - s2*al)*(rz-b) + (s1*th*xs)*ws + (s1*th*xk)*rk + Q - b - Z,
~ (-s1*th*al - s2*az)*w + (-s1*th*az + s2*az)*(rz-b) + (s1*th*xs)*ws + (s1*th*xk)*rk + Q,
~ al*th*w + az*tv*(rz-b) + xs*th*ws + xk*th*rk)
unknown <- Vector(~w, ~rz, ~rk, ~ws, ~Q)
install.packages("symengine")
install.packages("tidyverse")
install.packages("data.tabble")
install.packages("data.table")
install.packages("arrow")
install.packages("did")
install.packages("Rtools")
install.packages("RTools")
Rcpp::cppFunction('int crashMe(int ignored) { ::abort(); }');
library(Rcpp)
Rcpp::cppFunction('int crashMe(int ignored) { ::abort(); }');
quit()
?quit
q(save = "no")
?fmean
library(collapse)
?fmean
?fvar
rm(list = ls())
gc()
rm(list = ls())
gc()
library(devtools)
?devtools
setwd("~/GitHub/simplerd")
create_package()
create_package("")
create_package("~/GitHub/simplerd/")
library(usethis)
create_package("~/GitHub/simplerd/")
create_package("~/Documents/GitHub/simplerd/")
use_gpl3_license()
?usethis
